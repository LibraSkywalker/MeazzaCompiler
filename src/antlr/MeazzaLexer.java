// Generated from C:/Users/Bill/OneDrive/Ideaprojects/Meazzacompiler\Meazza.g4 by ANTLR 4.5.1
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MeazzaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, CONST=41, UNSIGNED=42, CLASS=43, VAR_TYPE=44, STRING=45, 
		INT_POST=46, ID=47, INT_DATA=48, LBRACE=49, RBRACE=50, LBLOCK=51, RBLOCK=52, 
		FLOAT_DATA=53, CHAR_DATA=54, STRING_DATA=55, VOID=56, LINE_COMMENT=57, 
		BLOCK_COMMENT=58, Translate=59, WS=60;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "CONST", 
		"UNSIGNED", "CLASS", "VAR_TYPE", "STRING", "INT_POST", "ID", "INT_DATA", 
		"LBRACE", "RBRACE", "LBLOCK", "RBLOCK", "FLOAT_DATA", "CHAR_DATA", "STRING_DATA", 
		"VOID", "CCHAR", "SCHAR", "LINE_COMMENT", "BLOCK_COMMENT", "ID_head", 
		"ID_tail", "Translate", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'='", "';'", "'null'", "'true'", "'false'", "','", "'{'", "'}'", 
		"'if'", "'else'", "'for'", "'while'", "'break'", "'continue'", "'return'", 
		"'new'", "'.'", "'size()'", "'-'", "'~'", "'!'", "'++'", "'--'", "'*'", 
		"'/'", "'%'", "'+'", "'<<'", "'>>'", "'>'", "'<'", "'>='", "'<='", "'=='", 
		"'!='", "'&'", "'^'", "'|'", "'&&'", "'||'", "'const'", "'unsigned'", 
		"'class'", null, "'string'", null, null, null, "'('", "')'", "'['", "']'", 
		null, null, null, "'void'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, "CONST", "UNSIGNED", "CLASS", "VAR_TYPE", 
		"STRING", "INT_POST", "ID", "INT_DATA", "LBRACE", "RBRACE", "LBLOCK", 
		"RBLOCK", "FLOAT_DATA", "CHAR_DATA", "STRING_DATA", "VOID", "LINE_COMMENT", 
		"BLOCK_COMMENT", "Translate", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MeazzaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Meazza.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2>\u01b8\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3"+
		"\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n"+
		"\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16"+
		"\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17"+
		"\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\23"+
		"\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27"+
		"\3\27\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35"+
		"\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3$"+
		"\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3"+
		"+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3"+
		"-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3"+
		"-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\5-\u014e\n-\3.\3.\3.\3.\3"+
		".\3.\3.\3/\3/\3/\3/\5/\u015b\n/\3\60\3\60\7\60\u015f\n\60\f\60\16\60\u0162"+
		"\13\60\3\61\6\61\u0165\n\61\r\61\16\61\u0166\3\62\3\62\3\63\3\63\3\64"+
		"\3\64\3\65\3\65\3\66\3\66\3\66\3\66\3\66\5\66\u0176\n\66\3\67\3\67\3\67"+
		"\5\67\u017b\n\67\3\67\3\67\38\38\38\78\u0182\n8\f8\168\u0185\138\38\3"+
		"8\39\39\39\39\39\3:\3:\3;\3;\3<\3<\3<\3<\7<\u0196\n<\f<\16<\u0199\13<"+
		"\3<\3<\3=\3=\3=\3=\7=\u01a1\n=\f=\16=\u01a4\13=\3=\3=\3=\3=\3=\3>\3>\3"+
		"?\3?\3@\3@\3@\3A\6A\u01b3\nA\rA\16A\u01b4\3A\3A\3\u01a2\2B\3\3\5\4\7\5"+
		"\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G"+
		"%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s\2u\2w;y"+
		"<{\2}\2\177=\u0081>\3\2\r\3\2\62;\3\2))\3\2$$\6\2\f\f\17\17))^^\6\2\f"+
		"\f\17\17$$^^\4\2\f\f\17\17\5\2C\\aac|\6\2\62;C\\aac|\3\2^^\t\2$$))\61"+
		"\61AA^^pptt\5\2\13\f\17\17\"\"\u01c4\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2"+
		"\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23"+
		"\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2"+
		"\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2"+
		"\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3"+
		"\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2"+
		"\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2"+
		"\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2["+
		"\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2"+
		"\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2w\3\2\2\2"+
		"\2y\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\3\u0083\3\2\2\2\5\u0085\3\2"+
		"\2\2\7\u0087\3\2\2\2\t\u008c\3\2\2\2\13\u0091\3\2\2\2\r\u0097\3\2\2\2"+
		"\17\u0099\3\2\2\2\21\u009b\3\2\2\2\23\u009d\3\2\2\2\25\u00a0\3\2\2\2\27"+
		"\u00a5\3\2\2\2\31\u00a9\3\2\2\2\33\u00af\3\2\2\2\35\u00b5\3\2\2\2\37\u00be"+
		"\3\2\2\2!\u00c5\3\2\2\2#\u00c9\3\2\2\2%\u00cb\3\2\2\2\'\u00d2\3\2\2\2"+
		")\u00d4\3\2\2\2+\u00d6\3\2\2\2-\u00d8\3\2\2\2/\u00db\3\2\2\2\61\u00de"+
		"\3\2\2\2\63\u00e0\3\2\2\2\65\u00e2\3\2\2\2\67\u00e4\3\2\2\29\u00e6\3\2"+
		"\2\2;\u00e9\3\2\2\2=\u00ec\3\2\2\2?\u00ee\3\2\2\2A\u00f0\3\2\2\2C\u00f3"+
		"\3\2\2\2E\u00f6\3\2\2\2G\u00f9\3\2\2\2I\u00fc\3\2\2\2K\u00fe\3\2\2\2M"+
		"\u0100\3\2\2\2O\u0102\3\2\2\2Q\u0105\3\2\2\2S\u0108\3\2\2\2U\u010e\3\2"+
		"\2\2W\u0117\3\2\2\2Y\u014d\3\2\2\2[\u014f\3\2\2\2]\u015a\3\2\2\2_\u015c"+
		"\3\2\2\2a\u0164\3\2\2\2c\u0168\3\2\2\2e\u016a\3\2\2\2g\u016c\3\2\2\2i"+
		"\u016e\3\2\2\2k\u0170\3\2\2\2m\u0177\3\2\2\2o\u017e\3\2\2\2q\u0188\3\2"+
		"\2\2s\u018d\3\2\2\2u\u018f\3\2\2\2w\u0191\3\2\2\2y\u019c\3\2\2\2{\u01aa"+
		"\3\2\2\2}\u01ac\3\2\2\2\177\u01ae\3\2\2\2\u0081\u01b2\3\2\2\2\u0083\u0084"+
		"\7?\2\2\u0084\4\3\2\2\2\u0085\u0086\7=\2\2\u0086\6\3\2\2\2\u0087\u0088"+
		"\7p\2\2\u0088\u0089\7w\2\2\u0089\u008a\7n\2\2\u008a\u008b\7n\2\2\u008b"+
		"\b\3\2\2\2\u008c\u008d\7v\2\2\u008d\u008e\7t\2\2\u008e\u008f\7w\2\2\u008f"+
		"\u0090\7g\2\2\u0090\n\3\2\2\2\u0091\u0092\7h\2\2\u0092\u0093\7c\2\2\u0093"+
		"\u0094\7n\2\2\u0094\u0095\7u\2\2\u0095\u0096\7g\2\2\u0096\f\3\2\2\2\u0097"+
		"\u0098\7.\2\2\u0098\16\3\2\2\2\u0099\u009a\7}\2\2\u009a\20\3\2\2\2\u009b"+
		"\u009c\7\177\2\2\u009c\22\3\2\2\2\u009d\u009e\7k\2\2\u009e\u009f\7h\2"+
		"\2\u009f\24\3\2\2\2\u00a0\u00a1\7g\2\2\u00a1\u00a2\7n\2\2\u00a2\u00a3"+
		"\7u\2\2\u00a3\u00a4\7g\2\2\u00a4\26\3\2\2\2\u00a5\u00a6\7h\2\2\u00a6\u00a7"+
		"\7q\2\2\u00a7\u00a8\7t\2\2\u00a8\30\3\2\2\2\u00a9\u00aa\7y\2\2\u00aa\u00ab"+
		"\7j\2\2\u00ab\u00ac\7k\2\2\u00ac\u00ad\7n\2\2\u00ad\u00ae\7g\2\2\u00ae"+
		"\32\3\2\2\2\u00af\u00b0\7d\2\2\u00b0\u00b1\7t\2\2\u00b1\u00b2\7g\2\2\u00b2"+
		"\u00b3\7c\2\2\u00b3\u00b4\7m\2\2\u00b4\34\3\2\2\2\u00b5\u00b6\7e\2\2\u00b6"+
		"\u00b7\7q\2\2\u00b7\u00b8\7p\2\2\u00b8\u00b9\7v\2\2\u00b9\u00ba\7k\2\2"+
		"\u00ba\u00bb\7p\2\2\u00bb\u00bc\7w\2\2\u00bc\u00bd\7g\2\2\u00bd\36\3\2"+
		"\2\2\u00be\u00bf\7t\2\2\u00bf\u00c0\7g\2\2\u00c0\u00c1\7v\2\2\u00c1\u00c2"+
		"\7w\2\2\u00c2\u00c3\7t\2\2\u00c3\u00c4\7p\2\2\u00c4 \3\2\2\2\u00c5\u00c6"+
		"\7p\2\2\u00c6\u00c7\7g\2\2\u00c7\u00c8\7y\2\2\u00c8\"\3\2\2\2\u00c9\u00ca"+
		"\7\60\2\2\u00ca$\3\2\2\2\u00cb\u00cc\7u\2\2\u00cc\u00cd\7k\2\2\u00cd\u00ce"+
		"\7|\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0\7*\2\2\u00d0\u00d1\7+\2\2\u00d1"+
		"&\3\2\2\2\u00d2\u00d3\7/\2\2\u00d3(\3\2\2\2\u00d4\u00d5\7\u0080\2\2\u00d5"+
		"*\3\2\2\2\u00d6\u00d7\7#\2\2\u00d7,\3\2\2\2\u00d8\u00d9\7-\2\2\u00d9\u00da"+
		"\7-\2\2\u00da.\3\2\2\2\u00db\u00dc\7/\2\2\u00dc\u00dd\7/\2\2\u00dd\60"+
		"\3\2\2\2\u00de\u00df\7,\2\2\u00df\62\3\2\2\2\u00e0\u00e1\7\61\2\2\u00e1"+
		"\64\3\2\2\2\u00e2\u00e3\7\'\2\2\u00e3\66\3\2\2\2\u00e4\u00e5\7-\2\2\u00e5"+
		"8\3\2\2\2\u00e6\u00e7\7>\2\2\u00e7\u00e8\7>\2\2\u00e8:\3\2\2\2\u00e9\u00ea"+
		"\7@\2\2\u00ea\u00eb\7@\2\2\u00eb<\3\2\2\2\u00ec\u00ed\7@\2\2\u00ed>\3"+
		"\2\2\2\u00ee\u00ef\7>\2\2\u00ef@\3\2\2\2\u00f0\u00f1\7@\2\2\u00f1\u00f2"+
		"\7?\2\2\u00f2B\3\2\2\2\u00f3\u00f4\7>\2\2\u00f4\u00f5\7?\2\2\u00f5D\3"+
		"\2\2\2\u00f6\u00f7\7?\2\2\u00f7\u00f8\7?\2\2\u00f8F\3\2\2\2\u00f9\u00fa"+
		"\7#\2\2\u00fa\u00fb\7?\2\2\u00fbH\3\2\2\2\u00fc\u00fd\7(\2\2\u00fdJ\3"+
		"\2\2\2\u00fe\u00ff\7`\2\2\u00ffL\3\2\2\2\u0100\u0101\7~\2\2\u0101N\3\2"+
		"\2\2\u0102\u0103\7(\2\2\u0103\u0104\7(\2\2\u0104P\3\2\2\2\u0105\u0106"+
		"\7~\2\2\u0106\u0107\7~\2\2\u0107R\3\2\2\2\u0108\u0109\7e\2\2\u0109\u010a"+
		"\7q\2\2\u010a\u010b\7p\2\2\u010b\u010c\7u\2\2\u010c\u010d\7v\2\2\u010d"+
		"T\3\2\2\2\u010e\u010f\7w\2\2\u010f\u0110\7p\2\2\u0110\u0111\7u\2\2\u0111"+
		"\u0112\7k\2\2\u0112\u0113\7i\2\2\u0113\u0114\7p\2\2\u0114\u0115\7g\2\2"+
		"\u0115\u0116\7f\2\2\u0116V\3\2\2\2\u0117\u0118\7e\2\2\u0118\u0119\7n\2"+
		"\2\u0119\u011a\7c\2\2\u011a\u011b\7u\2\2\u011b\u011c\7u\2\2\u011cX\3\2"+
		"\2\2\u011d\u011e\7u\2\2\u011e\u011f\7j\2\2\u011f\u0120\7q\2\2\u0120\u0121"+
		"\7t\2\2\u0121\u014e\7v\2\2\u0122\u0123\7e\2\2\u0123\u0124\7j\2\2\u0124"+
		"\u0125\7c\2\2\u0125\u014e\7t\2\2\u0126\u0127\7k\2\2\u0127\u0128\7p\2\2"+
		"\u0128\u014e\7v\2\2\u0129\u012a\7f\2\2\u012a\u012b\7q\2\2\u012b\u012c"+
		"\7w\2\2\u012c\u012d\7d\2\2\u012d\u012e\7n\2\2\u012e\u014e\7g\2\2\u012f"+
		"\u0130\7n\2\2\u0130\u0131\7q\2\2\u0131\u0132\7p\2\2\u0132\u014e\7i\2\2"+
		"\u0133\u0134\7n\2\2\u0134\u0135\7q\2\2\u0135\u0136\7p\2\2\u0136\u0137"+
		"\7i\2\2\u0137\u0138\7\"\2\2\u0138\u0139\7n\2\2\u0139\u013a\7q\2\2\u013a"+
		"\u013b\7p\2\2\u013b\u014e\7i\2\2\u013c\u013d\7n\2\2\u013d\u013e\7q\2\2"+
		"\u013e\u013f\7p\2\2\u013f\u0140\7i\2\2\u0140\u0141\7\"\2\2\u0141\u0142"+
		"\7f\2\2\u0142\u0143\7q\2\2\u0143\u0144\7w\2\2\u0144\u0145\7d\2\2\u0145"+
		"\u0146\7n\2\2\u0146\u014e\7g\2\2\u0147\u0148\7u\2\2\u0148\u0149\7v\2\2"+
		"\u0149\u014a\7t\2\2\u014a\u014b\7k\2\2\u014b\u014c\7p\2\2\u014c\u014e"+
		"\7i\2\2\u014d\u011d\3\2\2\2\u014d\u0122\3\2\2\2\u014d\u0126\3\2\2\2\u014d"+
		"\u0129\3\2\2\2\u014d\u012f\3\2\2\2\u014d\u0133\3\2\2\2\u014d\u013c\3\2"+
		"\2\2\u014d\u0147\3\2\2\2\u014eZ\3\2\2\2\u014f\u0150\7u\2\2\u0150\u0151"+
		"\7v\2\2\u0151\u0152\7t\2\2\u0152\u0153\7k\2\2\u0153\u0154\7p\2\2\u0154"+
		"\u0155\7i\2\2\u0155\\\3\2\2\2\u0156\u0157\7N\2\2\u0157\u015b\7N\2\2\u0158"+
		"\u0159\7W\2\2\u0159\u015b\7N\2\2\u015a\u0156\3\2\2\2\u015a\u0158\3\2\2"+
		"\2\u015b^\3\2\2\2\u015c\u0160\5{>\2\u015d\u015f\5}?\2\u015e\u015d\3\2"+
		"\2\2\u015f\u0162\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161"+
		"`\3\2\2\2\u0162\u0160\3\2\2\2\u0163\u0165\t\2\2\2\u0164\u0163\3\2\2\2"+
		"\u0165\u0166\3\2\2\2\u0166\u0164\3\2\2\2\u0166\u0167\3\2\2\2\u0167b\3"+
		"\2\2\2\u0168\u0169\7*\2\2\u0169d\3\2\2\2\u016a\u016b\7+\2\2\u016bf\3\2"+
		"\2\2\u016c\u016d\7]\2\2\u016dh\3\2\2\2\u016e\u016f\7_\2\2\u016fj\3\2\2"+
		"\2\u0170\u0171\5a\61\2\u0171\u0172\7\60\2\2\u0172\u0175\5a\61\2\u0173"+
		"\u0174\7G\2\2\u0174\u0176\5a\61\2\u0175\u0173\3\2\2\2\u0175\u0176\3\2"+
		"\2\2\u0176l\3\2\2\2\u0177\u017a\t\3\2\2\u0178\u017b\5s:\2\u0179\u017b"+
		"\5\177@\2\u017a\u0178\3\2\2\2\u017a\u0179\3\2\2\2\u017b\u017c\3\2\2\2"+
		"\u017c\u017d\t\3\2\2\u017dn\3\2\2\2\u017e\u0183\t\4\2\2\u017f\u0182\5"+
		"u;\2\u0180\u0182\5\177@\2\u0181\u017f\3\2\2\2\u0181\u0180\3\2\2\2\u0182"+
		"\u0185\3\2\2\2\u0183\u0181\3\2\2\2\u0183\u0184\3\2\2\2\u0184\u0186\3\2"+
		"\2\2\u0185\u0183\3\2\2\2\u0186\u0187\t\4\2\2\u0187p\3\2\2\2\u0188\u0189"+
		"\7x\2\2\u0189\u018a\7q\2\2\u018a\u018b\7k\2\2\u018b\u018c\7f\2\2\u018c"+
		"r\3\2\2\2\u018d\u018e\n\5\2\2\u018et\3\2\2\2\u018f\u0190\n\6\2\2\u0190"+
		"v\3\2\2\2\u0191\u0192\7\61\2\2\u0192\u0193\7\61\2\2\u0193\u0197\3\2\2"+
		"\2\u0194\u0196\n\7\2\2\u0195\u0194\3\2\2\2\u0196\u0199\3\2\2\2\u0197\u0195"+
		"\3\2\2\2\u0197\u0198\3\2\2\2\u0198\u019a\3\2\2\2\u0199\u0197\3\2\2\2\u019a"+
		"\u019b\b<\2\2\u019bx\3\2\2\2\u019c\u019d\7\61\2\2\u019d\u019e\7,\2\2\u019e"+
		"\u01a2\3\2\2\2\u019f\u01a1\13\2\2\2\u01a0\u019f\3\2\2\2\u01a1\u01a4\3"+
		"\2\2\2\u01a2\u01a3\3\2\2\2\u01a2\u01a0\3\2\2\2\u01a3\u01a5\3\2\2\2\u01a4"+
		"\u01a2\3\2\2\2\u01a5\u01a6\7,\2\2\u01a6\u01a7\7\61\2\2\u01a7\u01a8\3\2"+
		"\2\2\u01a8\u01a9\b=\2\2\u01a9z\3\2\2\2\u01aa\u01ab\t\b\2\2\u01ab|\3\2"+
		"\2\2\u01ac\u01ad\t\t\2\2\u01ad~\3\2\2\2\u01ae\u01af\t\n\2\2\u01af\u01b0"+
		"\t\13\2\2\u01b0\u0080\3\2\2\2\u01b1\u01b3\t\f\2\2\u01b2\u01b1\3\2\2\2"+
		"\u01b3\u01b4\3\2\2\2\u01b4\u01b2\3\2\2\2\u01b4\u01b5\3\2\2\2\u01b5\u01b6"+
		"\3\2\2\2\u01b6\u01b7\bA\3\2\u01b7\u0082\3\2\2\2\16\2\u014d\u015a\u0160"+
		"\u0166\u0175\u017a\u0181\u0183\u0197\u01a2\u01b4\4\2\3\2\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}